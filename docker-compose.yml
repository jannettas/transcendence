name: transcendence

services:
  nginx:
    container_name: nginx
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-k", "-f", "https://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    depends_on:
      - gunicorn
      - daphne
      - redis  # Ajout de redis comme dépendance
    ports:
      - "8443:443"  # Suppression de 8080:80 si HTTPS uniquement
    volumes:
      - nginx_ssl_vol:/ssl
      - ./transcendence/static_files:/static  # Alignement avec nginx.conf
      - ./transcendence/media:/media  # Alignement avec nginx.conf
      - nginx_logs:/var/log/nginx
    networks:
      - frontend
      - backend

  redis:
    container_name: redis
    image: redis:7.2.5
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1m30s
      timeout: 10s
      retries: 3
    networks:
      - backend
    command: ["redis-server", "--loglevel", "debug"]

  db:
    container_name: postgres
    image: postgres:16.3-bookworm
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U${DB_USER} -d${DB_NAME}"]
      start_period: 5s
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db_vol:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    networks:
      - backend

  daphne:
    container_name: daphne
    build:
      dockerfile: ./daphne/Dockerfile
      context: ./docker
    restart: always
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started  # Ajout de redis comme dépendance
    volumes:
      - ./transcendence:/transcendence
    networks:
      - backend
      - frontend
    environment:
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: db
      DB_PORT: ${DB_PORT}
      SUPER_USER: ${SUPER_USER}
      SUPER_PASSWORD: ${SUPER_PASSWORD}
      SUPER_MAIL: ${SUPER_MAIL}
      SECRET_KEY: ${SECRET_KEY}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}

  gunicorn:
    container_name: gunicorn
    build: ./docker/gunicorn
    restart: always
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started  # Ajout de redis comme dépendance
    volumes:
      - ./transcendence:/transcendence
    networks:
      - backend
      - frontend
    environment:
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: db
      DB_PORT: ${DB_PORT}
      SECRET_KEY: ${SECRET_KEY}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}

volumes:
  db_vol:
  nginx_ssl_vol:
  nginx_logs:

networks:
  backend:
  frontend:
